# Generated by Django 2.1.1 on 2018-09-30 20:19

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('age', models.CharField(choices=[('68歳', '1950年'), ('67歳', '1951年'), ('66歳', '1952年'), ('65歳', '1953年'), ('64歳', '1954年'), ('63歳', '1955年'), ('62歳', '1956年'), ('61歳', '1957年'), ('60歳', '1958年'), ('59歳', '1959年'), ('58歳', '1960年'), ('57歳', '1961年'), ('56歳', '1962年'), ('55歳', '1963年'), ('54歳', '1964年'), ('53歳', '1965年'), ('52歳', '1966年'), ('51歳', '1967年'), ('50歳', '1968年'), ('49歳', '1969年'), ('48歳', '1970年'), ('47歳', '1971年'), ('46歳', '1972年'), ('45歳', '1973年'), ('44歳', '1974年'), ('43歳', '1975年'), ('42歳', '1976年'), ('41歳', '1977年'), ('40歳', '1978年'), ('39歳', '1979年'), ('38歳', '1980年'), ('37歳', '1981年'), ('36歳', '1982年'), ('35歳', '1983年'), ('34歳', '1984年'), ('33歳', '1985年'), ('32歳', '1986年'), ('31歳', '1987年'), ('30歳', '1988年'), ('29歳', '1989年'), ('28歳', '1990年'), ('27歳', '1991年'), ('26歳', '1992年'), ('25歳', '1993年'), ('24歳', '1994年'), ('23歳', '1995年'), ('22歳', '1996年'), ('21歳', '1997年'), ('20歳', '1998年'), ('19歳', '1999年'), ('18歳', '2000年'), ('17歳', '2001年'), ('16歳', '2002年'), ('15歳', '2003年'), ('14歳', '2004年'), ('13歳', '2005年'), ('12歳', '2006年'), ('11歳', '2007年'), ('10歳', '2008年')], default='28歳', max_length=2, verbose_name='年齢')),
                ('gendder', models.CharField(choices=[('male', '男'), ('female', '女')], default='female', max_length=6, verbose_name='性別')),
                ('address', models.CharField(max_length=100, verbose_name='お住まい')),
                ('mobile', models.CharField(blank=True, max_length=13, null=True, verbose_name='携帯番号')),
                ('weixin', models.CharField(blank=True, max_length=13, null=True, verbose_name='微信')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'ユーザー情報',
                'verbose_name_plural': 'ユーザー情報',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
